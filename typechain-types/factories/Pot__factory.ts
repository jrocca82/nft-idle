/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Pot, PotInterface } from "../Pot";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract Land",
        name: "_landContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "landContract",
    outputs: [
      {
        internalType: "contract Land",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "mintPot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620026093803806200260983398181016040528101906200003791906200058d565b8282816003908051906020019062000051929190620002c7565b5080600490805190602001906200006a929190620002c7565b5050506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620000e5620000d96200014060201b60201c565b6200014860201b60201c565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000137336200020e60201b60201c565b5050506200068b565b600033905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146200026c57600080fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054620002d59062000656565b90600052602060002090601f016020900481019282620002f9576000855562000345565b82601f106200031457805160ff191683800117855562000345565b8280016001018555821562000345579182015b828111156200034457825182559160200191906001019062000327565b5b50905062000354919062000358565b5090565b5b808211156200037357600081600090555060010162000359565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003e08262000395565b810181811067ffffffffffffffff82111715620004025762000401620003a6565b5b80604052505050565b60006200041762000377565b9050620004258282620003d5565b919050565b600067ffffffffffffffff821115620004485762000447620003a6565b5b620004538262000395565b9050602081019050919050565b60005b838110156200048057808201518184015260208101905062000463565b8381111562000490576000848401525b50505050565b6000620004ad620004a7846200042a565b6200040b565b905082815260208101848484011115620004cc57620004cb62000390565b5b620004d984828562000460565b509392505050565b600082601f830112620004f957620004f86200038b565b5b81516200050b84826020860162000496565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005418262000514565b9050919050565b6000620005558262000534565b9050919050565b620005678162000548565b81146200057357600080fd5b50565b60008151905062000587816200055c565b92915050565b600080600060608486031215620005a957620005a862000381565b5b600084015167ffffffffffffffff811115620005ca57620005c962000386565b5b620005d886828701620004e1565b935050602084015167ffffffffffffffff811115620005fc57620005fb62000386565b5b6200060a86828701620004e1565b92505060406200061d8682870162000576565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200066f57607f821691505b60208210810362000685576200068462000627565b5b50919050565b611f6e806200069b6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb1461035b578063abc8c7af1461038b578063b796340b146103a9578063dd62ed3e146103c5578063f2fde38b146103f55761012c565b8063715018a6146102c957806373ad6c2d146102d35780638da5cb5b146102ef57806395d89b411461030d578063a457c2d71461032b5761012c565b8063313ce567116100f4578063313ce567146101eb57806339509351146102095780636e4e3e2d146102395780636f77926b1461026957806370a08231146102995761012c565b806303d073401461013157806306fdde031461014f578063095ea7b31461016d57806318160ddd1461019d57806323b872dd146101bb575b600080fd5b610139610411565b604051610146919061142e565b60405180910390f35b610157610437565b60405161016491906114e2565b60405180910390f35b6101876004803603810190610182919061157d565b6104c9565b60405161019491906115d8565b60405180910390f35b6101a56104ec565b6040516101b29190611602565b60405180910390f35b6101d560048036038101906101d0919061161d565b6104f6565b6040516101e291906115d8565b60405180910390f35b6101f3610525565b604051610200919061168c565b60405180910390f35b610223600480360381019061021e919061157d565b61052a565b60405161023091906115d8565b60405180910390f35b610253600480360381019061024e91906116a7565b610561565b60405161026091906115d8565b60405180910390f35b610283600480360381019061027e91906116a7565b6105b7565b60405161029091906115d8565b60405180910390f35b6102b360048036038101906102ae91906116a7565b61060d565b6040516102c09190611602565b60405180910390f35b6102d1610655565b005b6102ed60048036038101906102e891906116a7565b610669565b005b6102f761074f565b60405161030491906116e3565b60405180910390f35b610315610779565b60405161032291906114e2565b60405180910390f35b6103456004803603810190610340919061157d565b61080b565b60405161035291906115d8565b60405180910390f35b6103756004803603810190610370919061157d565b610882565b60405161038291906115d8565b60405180910390f35b6103936108a5565b6040516103a091906116e3565b60405180910390f35b6103c360048036038101906103be91906116fe565b6108cb565b005b6103df60048036038101906103da919061173e565b610a64565b6040516103ec9190611602565b60405180910390f35b61040f600480360381019061040a91906116a7565b610aeb565b005b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060038054610446906117ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610472906117ad565b80156104bf5780601f10610494576101008083540402835291602001916104bf565b820191906000526020600020905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b6000806104d4610b6e565b90506104e1818585610b76565b600191505092915050565b6000600254905090565b600080610501610b6e565b905061050e858285610d3f565b610519858585610dcb565b60019150509392505050565b600090565b600080610535610b6e565b90506105568185856105478589610a64565b610551919061180d565b610b76565b600191505092915050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61065d61104a565b61066760006110c8565b565b61067161104a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d7906118d5565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061074c600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661118e565b50565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610788906117ad565b80601f01602080910402602001604051908101604052809291908181526020018280546107b4906117ad565b80156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b5050505050905090565b600080610816610b6e565b905060006108248286610a64565b905083811015610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086090611967565b60405180910390fd5b6108768286868403610b76565b60019250505092915050565b60008061088d610b6e565b905061089a818585610dcb565b600191505092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361093a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610931906119d3565b60405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90611a3f565b60405180910390fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663696b5c3f83836040518363ffffffff1660e01b8152600401610a23929190611a5f565b600060405180830381600087803b158015610a3d57600080fd5b505af1158015610a51573d6000803e3d6000fd5b50505050610a60816001611246565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610af361104a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5990611afa565b60405180910390fd5b610b6b816110c8565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdc90611b8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4b90611c1e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610d329190611602565b60405180910390a3505050565b6000610d4b8484610a64565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610dc55781811015610db7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dae90611c8a565b60405180910390fd5b610dc48484848403610b76565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3190611d1c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea090611dae565b60405180910390fd5b610eb48383836113a5565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3190611e40565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fcd919061180d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110319190611602565b60405180910390a36110448484846113aa565b50505050565b611052610b6e565b73ffffffffffffffffffffffffffffffffffffffff1661107061074f565b73ffffffffffffffffffffffffffffffffffffffff16146110c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bd90611eac565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146111eb57600080fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ac90611f18565b60405180910390fd5b6112c1600083836113a5565b80600260008282546112d3919061180d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611328919061180d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161138d9190611602565b60405180910390a36113a1600083836113aa565b5050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113f46113ef6113ea846113af565b6113cf565b6113af565b9050919050565b6000611406826113d9565b9050919050565b6000611418826113fb565b9050919050565b6114288161140d565b82525050565b6000602082019050611443600083018461141f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611483578082015181840152602081019050611468565b83811115611492576000848401525b50505050565b6000601f19601f8301169050919050565b60006114b482611449565b6114be8185611454565b93506114ce818560208601611465565b6114d781611498565b840191505092915050565b600060208201905081810360008301526114fc81846114a9565b905092915050565b600080fd5b6000611514826113af565b9050919050565b61152481611509565b811461152f57600080fd5b50565b6000813590506115418161151b565b92915050565b6000819050919050565b61155a81611547565b811461156557600080fd5b50565b60008135905061157781611551565b92915050565b6000806040838503121561159457611593611504565b5b60006115a285828601611532565b92505060206115b385828601611568565b9150509250929050565b60008115159050919050565b6115d2816115bd565b82525050565b60006020820190506115ed60008301846115c9565b92915050565b6115fc81611547565b82525050565b600060208201905061161760008301846115f3565b92915050565b60008060006060848603121561163657611635611504565b5b600061164486828701611532565b935050602061165586828701611532565b925050604061166686828701611568565b9150509250925092565b600060ff82169050919050565b61168681611670565b82525050565b60006020820190506116a1600083018461167d565b92915050565b6000602082840312156116bd576116bc611504565b5b60006116cb84828501611532565b91505092915050565b6116dd81611509565b82525050565b60006020820190506116f860008301846116d4565b92915050565b6000806040838503121561171557611714611504565b5b600061172385828601611568565b925050602061173485828601611532565b9150509250929050565b6000806040838503121561175557611754611504565b5b600061176385828601611532565b925050602061177485828601611532565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117c557607f821691505b6020821081036117d8576117d761177e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061181882611547565b915061182383611547565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611858576118576117de565b5b828201905092915050565b7f43616e6e6f7420736574206d61726b6574706c61636520746f2030206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118bf602383611454565b91506118ca82611863565b604082019050919050565b600060208201905081810360008301526118ee816118b2565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611951602583611454565b915061195c826118f5565b604082019050919050565b6000602082019050818103600083015261198081611944565b9050919050565b7f43616e6e6f74206d696e7420706f7420746f207a65726f206164647265737300600082015250565b60006119bd601f83611454565b91506119c882611987565b602082019050919050565b600060208201905081810360008301526119ec816119b0565b9050919050565b7f506f7420436f6e74726163743a20556e617574686f72697a6564000000000000600082015250565b6000611a29601a83611454565b9150611a34826119f3565b602082019050919050565b60006020820190508181036000830152611a5881611a1c565b9050919050565b6000604082019050611a7460008301856115f3565b611a8160208301846116d4565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ae4602683611454565b9150611aef82611a88565b604082019050919050565b60006020820190508181036000830152611b1381611ad7565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611b76602483611454565b9150611b8182611b1a565b604082019050919050565b60006020820190508181036000830152611ba581611b69565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c08602283611454565b9150611c1382611bac565b604082019050919050565b60006020820190508181036000830152611c3781611bfb565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611c74601d83611454565b9150611c7f82611c3e565b602082019050919050565b60006020820190508181036000830152611ca381611c67565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611d06602583611454565b9150611d1182611caa565b604082019050919050565b60006020820190508181036000830152611d3581611cf9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611d98602383611454565b9150611da382611d3c565b604082019050919050565b60006020820190508181036000830152611dc781611d8b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611e2a602683611454565b9150611e3582611dce565b604082019050919050565b60006020820190508181036000830152611e5981611e1d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e96602083611454565b9150611ea182611e60565b602082019050919050565b60006020820190508181036000830152611ec581611e89565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611f02601f83611454565b9150611f0d82611ecc565b602082019050919050565b60006020820190508181036000830152611f3181611ef5565b905091905056fea26469706673582212206797991d99a485016429cceba16606fd19a32a539300666fd3a3e82f7b2e1d4c64736f6c634300080d0033";

type PotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pot__factory extends ContractFactory {
  constructor(...args: PotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _landContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Pot> {
    return super.deploy(
      _name,
      _symbol,
      _landContract,
      overrides || {}
    ) as Promise<Pot>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _landContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _landContract,
      overrides || {}
    );
  }
  attach(address: string): Pot {
    return super.attach(address) as Pot;
  }
  connect(signer: Signer): Pot__factory {
    return super.connect(signer) as Pot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PotInterface {
    return new utils.Interface(_abi) as PotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pot {
    return new Contract(address, _abi, signerOrProvider) as Pot;
  }
}
