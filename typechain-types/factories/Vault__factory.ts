/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault, VaultInterface } from "../Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Land",
        name: "_land",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currency",
    outputs: [
      {
        internalType: "contract Currency",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landId",
        type: "uint256",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "land",
    outputs: [
      {
        internalType: "contract Land",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "landDetails",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastClaimTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "contract Marketplace",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landId",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Currency",
        name: "_currencyAddress",
        type: "address",
      },
    ],
    name: "setCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Marketplace",
        name: "_marketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "setOwnerAndStartEarn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d1138038062001d11833981810160405281019062000037919062000240565b620000576200004b620000f660201b60201c565b620000fe60201b60201c565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000272565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f482620001c7565b9050919050565b60006200020882620001e7565b9050919050565b6200021a81620001fb565b81146200022657600080fd5b50565b6000815190506200023a816200020f565b92915050565b600060208284031215620002595762000258620001c2565b5b6000620002698482850162000229565b91505092915050565b611a8f80620002826000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063abc8c7af11610066578063abc8c7af14610272578063e5a6b10f14610290578063f2fde38b146102ae578063fb1669ca146102ca576100f5565b8063715018a61461021057806373ad6c2d1461021a5780638c980129146102365780638da5cb5b14610254576100f5565b80632f84c391116100d35780632f84c39114610178578063379607f5146101945780636e4e3e2d146101b05780636f77926b146101e0576100f5565b806307f4d25c146100fa578063154856eb1461012c5780631e01043914610148575b600080fd5b610114600480360381019061010f9190610da9565b6102e6565b60405161012393929190610e26565b60405180910390f35b61014660048036038101906101419190610e89565b610330565b005b610162600480360381019061015d9190610da9565b610422565b60405161016f9190610ec9565b60405180910390f35b610192600480360381019061018d9190610f22565b610442565b005b6101ae60048036038101906101a99190610da9565b6104fd565b005b6101ca60048036038101906101c59190610f4f565b610838565b6040516101d79190610f97565b60405180910390f35b6101fa60048036038101906101f59190610f4f565b61088e565b6040516102079190610f97565b60405180910390f35b6102186108e4565b005b610234600480360381019061022f9190610ff0565b6108f8565b005b61023e6109b3565b60405161024b919061107c565b60405180910390f35b61025c6109d9565b6040516102699190611097565b60405180910390f35b61027a610a02565b60405161028791906110d3565b60405180910390f35b610298610a28565b6040516102a5919061110f565b60405180910390f35b6102c860048036038101906102c39190610f4f565b610a4e565b005b6102e460048036038101906102df9190610da9565b610ad1565b005b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b790611187565b60405180910390fd5b806006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061041e82610bdb565b5050565b600060066000838152602001908152602001600020600201549050919050565b61044a610c15565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b0906111f3565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c41a360a826040518263ffffffff1660e01b81526004016105589190610ec9565b602060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105999190611228565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fd906112c7565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663410cb3f8836040518263ffffffff1660e01b81526004016106639190610ec9565b600060405180830381865afa158015610680573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106a99190611451565b6040516020016106b991906114e1565b60405160208183030381529060405280519060200120905060006040516020016106e290611544565b60405160208183030381529060405280519060200120905080821461073c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610733906115a5565b60405180910390fd5b6000600660008581526020019081526020016000206002015490506000811161079a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079190611611565b60405180910390fd5b6107a384610bdb565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cb7e657933836040518363ffffffff1660e01b8152600401610800929190611631565b600060405180830381600087803b15801561081a57600080fd5b505af115801561082e573d6000803e3d6000fd5b5050505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6108ec610c15565b6108f66000610c93565b565b610900610c15565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361096f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610966906111f3565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a56610c15565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc906116cc565b60405180910390fd5b610ace81610c93565b50565b60006006600083815260200190815260200160002060010154905060008142610afa919061171b565b90506000603c82610b0b919061177e565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba091906117e8565b600a610bac9190611948565b82610bb79190611993565b90508060066000878152602001908152602001600020600201819055505050505050565b4260066000838152602001908152602001600020600101819055506000600660008381526020019081526020016000206002018190555050565b610c1d610d57565b73ffffffffffffffffffffffffffffffffffffffff16610c3b6109d9565b73ffffffffffffffffffffffffffffffffffffffff1614610c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8890611a39565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d8681610d73565b8114610d9157600080fd5b50565b600081359050610da381610d7d565b92915050565b600060208284031215610dbf57610dbe610d69565b5b6000610dcd84828501610d94565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0182610dd6565b9050919050565b610e1181610df6565b82525050565b610e2081610d73565b82525050565b6000606082019050610e3b6000830186610e08565b610e486020830185610e17565b610e556040830184610e17565b949350505050565b610e6681610df6565b8114610e7157600080fd5b50565b600081359050610e8381610e5d565b92915050565b60008060408385031215610ea057610e9f610d69565b5b6000610eae85828601610d94565b9250506020610ebf85828601610e74565b9150509250929050565b6000602082019050610ede6000830184610e17565b92915050565b6000610eef82610df6565b9050919050565b610eff81610ee4565b8114610f0a57600080fd5b50565b600081359050610f1c81610ef6565b92915050565b600060208284031215610f3857610f37610d69565b5b6000610f4684828501610f0d565b91505092915050565b600060208284031215610f6557610f64610d69565b5b6000610f7384828501610e74565b91505092915050565b60008115159050919050565b610f9181610f7c565b82525050565b6000602082019050610fac6000830184610f88565b92915050565b6000610fbd82610df6565b9050919050565b610fcd81610fb2565b8114610fd857600080fd5b50565b600081359050610fea81610fc4565b92915050565b60006020828403121561100657611005610d69565b5b600061101484828501610fdb565b91505092915050565b6000819050919050565b600061104261103d61103884610dd6565b61101d565b610dd6565b9050919050565b600061105482611027565b9050919050565b600061106682611049565b9050919050565b6110768161105b565b82525050565b6000602082019050611091600083018461106d565b92915050565b60006020820190506110ac6000830184610e08565b92915050565b60006110bd82611049565b9050919050565b6110cd816110b2565b82525050565b60006020820190506110e860008301846110c4565b92915050565b60006110f982611049565b9050919050565b611109816110ee565b82525050565b60006020820190506111246000830184611100565b92915050565b600082825260208201905092915050565b7f5661756c743a20556e617574686f72697a656400000000000000000000000000600082015250565b600061117160138361112a565b915061117c8261113b565b602082019050919050565b600060208201905081810360008301526111a081611164565b9050919050565b7f43616e6e6f7420736574206164647265737320746f2030000000000000000000600082015250565b60006111dd60178361112a565b91506111e8826111a7565b602082019050919050565b6000602082019050818103600083015261120c816111d0565b9050919050565b60008151905061122281610e5d565b92915050565b60006020828403121561123e5761123d610d69565b5b600061124c84828501611213565b91505092915050565b7f596f752063616e6e6f7420636c61696d20666f7220736f6d656f6e6520656c7360008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b60006112b160218361112a565b91506112bc82611255565b604082019050919050565b600060208201905081810360008301526112e0816112a4565b9050919050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61133a826112f1565b810181811067ffffffffffffffff8211171561135957611358611302565b5b80604052505050565b600061136c610d5f565b90506113788282611331565b919050565b600067ffffffffffffffff82111561139857611397611302565b5b6113a1826112f1565b9050602081019050919050565b60005b838110156113cc5780820151818401526020810190506113b1565b838111156113db576000848401525b50505050565b60006113f46113ef8461137d565b611362565b9050828152602081018484840111156114105761140f6112ec565b5b61141b8482856113ae565b509392505050565b600082601f830112611438576114376112e7565b5b81516114488482602086016113e1565b91505092915050565b60006020828403121561146757611466610d69565b5b600082015167ffffffffffffffff81111561148557611484610d6e565b5b61149184828501611423565b91505092915050565b600081519050919050565b600081905092915050565b60006114bb8261149a565b6114c581856114a5565b93506114d58185602086016113ae565b80840191505092915050565b60006114ed82846114b0565b915081905092915050565b7f50726f6475637469766500000000000000000000000000000000000000000000600082015250565b600061152e600a836114a5565b9150611539826114f8565b600a82019050919050565b600061154f82611521565b9150819050919050565b7f54686973206c616e64206973206e6f742070726f647563696e67000000000000600082015250565b600061158f601a8361112a565b915061159a82611559565b602082019050919050565b600060208201905081810360008301526115be81611582565b9050919050565b7f4e6f20746f6b656e7320746f20636c61696d2100000000000000000000000000600082015250565b60006115fb60138361112a565b9150611606826115c5565b602082019050919050565b6000602082019050818103600083015261162a816115ee565b9050919050565b60006040820190506116466000830185610e08565b6116536020830184610e17565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006116b660268361112a565b91506116c18261165a565b604082019050919050565b600060208201905081810360008301526116e5816116a9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061172682610d73565b915061173183610d73565b925082821015611744576117436116ec565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061178982610d73565b915061179483610d73565b9250826117a4576117a361174f565b5b828204905092915050565b600060ff82169050919050565b6117c5816117af565b81146117d057600080fd5b50565b6000815190506117e2816117bc565b92915050565b6000602082840312156117fe576117fd610d69565b5b600061180c848285016117d3565b91505092915050565b60008160011c9050919050565b6000808291508390505b600185111561186c57808604811115611848576118476116ec565b5b60018516156118575780820291505b808102905061186585611815565b945061182c565b94509492505050565b6000826118855760019050611941565b816118935760009050611941565b81600181146118a957600281146118b3576118e2565b6001915050611941565b60ff8411156118c5576118c46116ec565b5b8360020a9150848211156118dc576118db6116ec565b5b50611941565b5060208310610133831016604e8410600b84101617156119175782820a905083811115611912576119116116ec565b5b611941565b6119248484846001611822565b9250905081840481111561193b5761193a6116ec565b5b81810290505b9392505050565b600061195382610d73565b915061195e836117af565b925061198b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611875565b905092915050565b600061199e82610d73565b91506119a983610d73565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119e2576119e16116ec565b5b828202905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a2360208361112a565b9150611a2e826119ed565b602082019050919050565b60006020820190508181036000830152611a5281611a16565b905091905056fea2646970667358221220f1fcb28f67fcd091c4593e5210c90a30e9c3e818b1533e1f38db5b3ddd92845d64736f6c634300080d0033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _land: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vault> {
    return super.deploy(_land, overrides || {}) as Promise<Vault>;
  }
  getDeployTransaction(
    _land: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_land, overrides || {});
  }
  attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
