/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Marketplace, MarketplaceInterface } from "../Marketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "purchaseType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landId",
        type: "uint256",
      },
    ],
    name: "buyLand",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landId",
        type: "uint256",
      },
    ],
    name: "buyPot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_landId",
        type: "uint256",
      },
    ],
    name: "buyStarterPack",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "catPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "landPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "potPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setContractAuths",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "soupPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startPackPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a764000060065567016345785d8a00006007556706f05b59d3b20000600855670429d069189e0000600955670de0b6b3a7640000600a5534801561004c57600080fd5b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061163f806100b36000396000f3fe6080604052600436106100a75760003560e01c80636f77926b116100645780636f77926b1461019d5780639af91bbb146101da578063ced39558146101f6578063e7fb74c714610212578063f156c2991461022e578063fc22c15c14610259576100a7565b8063064c2ce2146100ac5780633ad4c342146100c85780634cba1e79146100f35780635c30518f1461010a578063670506e9146101355780636e4e3e2d14610160575b600080fd5b6100c660048036038101906100c19190610ed1565b610284565b005b3480156100d457600080fd5b506100dd61057b565b6040516100ea9190610f0d565b60405180910390f35b3480156100ff57600080fd5b50610108610581565b005b34801561011657600080fd5b5061011f6106c3565b60405161012c9190610f0d565b60405180910390f35b34801561014157600080fd5b5061014a6106c9565b6040516101579190610f0d565b60405180910390f35b34801561016c57600080fd5b5061018760048036038101906101829190610f86565b6106cf565b6040516101949190610fce565b60405180910390f35b3480156101a957600080fd5b506101c460048036038101906101bf9190610f86565b610724565b6040516101d19190610fce565b60405180910390f35b6101f460048036038101906101ef9190610ed1565b61077a565b005b610210600480360381019061020b9190610ed1565b6108e2565b005b61022c60048036038101906102279190610ed1565b610a61565b005b34801561023a57600080fd5b50610243610d1e565b6040516102509190610f0d565b60405180910390f35b34801561026557600080fd5b5061026e610d24565b60405161027b9190610f0d565b60405180910390f35b60075434101561029357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102ee9190610ff8565b602060405180830381865afa15801561030b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032f9190611028565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161038a9190610ff8565b602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190611028565b1161040b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610402906110b2565b60405180910390fd5b7f32a178036e4b78fc63019758f0b1bde285f6fba98dd3f91bf67a5fd809d76a78338260405161043c92919061111e565b60405180910390a1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306007546040518463ffffffff1660e01b81526004016104a59392919061115a565b6020604051808303816000875af11580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e891906111bd565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b796340b82336040518363ffffffff1660e01b81526004016105469291906111ea565b600060405180830381600087803b15801561056057600080fd5b505af1158015610574573d6000803e3d6000fd5b5050505050565b60085481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661060c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106039061125f565b60405180910390fd5b610637600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d2a565b610662600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d2a565b61068d600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d2a565b6106b8600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d2a565b6106c130610d2a565b565b60075481565b60095481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107d79190610ff8565b602060405180830381865afa1580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190611028565b14610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084f906112f1565b60405180910390fd5b600a5434101561089d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108949061135d565b60405180910390fd5b7f32a178036e4b78fc63019758f0b1bde285f6fba98dd3f91bf67a5fd809d76a7833826040516108ce9291906113c9565b60405180910390a16108df33610de0565b50565b6006543410156108f157600080fd5b7f32a178036e4b78fc63019758f0b1bde285f6fba98dd3f91bf67a5fd809d76a783382604051610922929190611451565b60405180910390a1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306006546040518463ffffffff1660e01b815260040161098b9392919061115a565b6020604051808303816000875af11580156109aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ce91906111bd565b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ed11e6282336040518363ffffffff1660e01b8152600401610a2c9291906111ea565b600060405180830381600087803b158015610a4657600080fd5b505af1158015610a5a573d6000803e3d6000fd5b5050505050565b60028110610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b906114d9565b60405180910390fd5b60008103610b9e57600854341015610abb57600080fd5b7f32a178036e4b78fc63019758f0b1bde285f6fba98dd3f91bf67a5fd809d76a783382604051610aec929190611545565b60405180910390a1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306008546040518463ffffffff1660e01b8152600401610b559392919061115a565b6020604051808303816000875af1158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9891906111bd565b50610c8c565b600954341015610bad57600080fd5b7f32a178036e4b78fc63019758f0b1bde285f6fba98dd3f91bf67a5fd809d76a783382604051610bde9291906115cd565b60405180910390a1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306009546040518463ffffffff1660e01b8152600401610c479392919061115a565b6020604051808303816000875af1158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a91906111bd565b505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634dc936c082336040518363ffffffff1660e01b8152600401610ce99291906111ea565b600060405180830381600087803b158015610d0357600080fd5b505af1158015610d17573d6000803e3d6000fd5b5050505050565b600a5481565b60065481565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610d8657600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610e3c57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600080fd5b6000819050919050565b610eae81610e9b565b8114610eb957600080fd5b50565b600081359050610ecb81610ea5565b92915050565b600060208284031215610ee757610ee6610e96565b5b6000610ef584828501610ebc565b91505092915050565b610f0781610e9b565b82525050565b6000602082019050610f226000830184610efe565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f5382610f28565b9050919050565b610f6381610f48565b8114610f6e57600080fd5b50565b600081359050610f8081610f5a565b92915050565b600060208284031215610f9c57610f9b610e96565b5b6000610faa84828501610f71565b91505092915050565b60008115159050919050565b610fc881610fb3565b82525050565b6000602082019050610fe36000830184610fbf565b92915050565b610ff281610f48565b82525050565b600060208201905061100d6000830184610fe9565b92915050565b60008151905061102281610ea5565b92915050565b60006020828403121561103e5761103d610e96565b5b600061104c84828501611013565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f206275792061206c616e6420666972737400000000600082015250565b600061109c601c83611055565b91506110a782611066565b602082019050919050565b600060208201905081810360008301526110cb8161108f565b9050919050565b7f506f740000000000000000000000000000000000000000000000000000000000600082015250565b6000611108600383611055565b9150611113826110d2565b602082019050919050565b60006060820190508181036000830152611137816110fb565b90506111466020830185610fe9565b6111536040830184610efe565b9392505050565b600060608201905061116f6000830186610fe9565b61117c6020830185610fe9565b6111896040830184610efe565b949350505050565b61119a81610fb3565b81146111a557600080fd5b50565b6000815190506111b781611191565b92915050565b6000602082840312156111d3576111d2610e96565b5b60006111e1848285016111a8565b91505092915050565b60006040820190506111ff6000830185610efe565b61120c6020830184610fe9565b9392505050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000611249600c83611055565b915061125482611213565b602082019050919050565b600060208201905081810360008301526112788161123c565b9050919050565b7f596f752063616e6e6f742070757263686173652061207374617274657220706160008201527f636b000000000000000000000000000000000000000000000000000000000000602082015250565b60006112db602283611055565b91506112e68261127f565b604082019050919050565b6000602082019050818103600083015261130a816112ce565b9050919050565b7f4e6f7420656e6f75676820455448000000000000000000000000000000000000600082015250565b6000611347600e83611055565b915061135282611311565b602082019050919050565b600060208201905081810360008301526113768161133a565b9050919050565b7f53746172746572205061636b0000000000000000000000000000000000000000600082015250565b60006113b3600c83611055565b91506113be8261137d565b602082019050919050565b600060608201905081810360008301526113e2816113a6565b90506113f16020830185610fe9565b6113fe6040830184610efe565b9392505050565b7f4c616e6400000000000000000000000000000000000000000000000000000000600082015250565b600061143b600483611055565b915061144682611405565b602082019050919050565b6000606082019050818103600083015261146a8161142e565b90506114796020830185610fe9565b6114866040830184610efe565b9392505050565b7f54686973206974656d20646f6573206e6f742065786973740000000000000000600082015250565b60006114c3601883611055565b91506114ce8261148d565b602082019050919050565b600060208201905081810360008301526114f2816114b6565b9050919050565b7f4361740000000000000000000000000000000000000000000000000000000000600082015250565b600061152f600383611055565b915061153a826114f9565b602082019050919050565b6000606082019050818103600083015261155e81611522565b905061156d6020830185610fe9565b61157a6040830184610efe565b9392505050565b7f536f757000000000000000000000000000000000000000000000000000000000600082015250565b60006115b7600483611055565b91506115c282611581565b602082019050919050565b600060608201905081810360008301526115e6816115aa565b90506115f56020830185610fe9565b6116026040830184610efe565b939250505056fea26469706673582212209f89ca887bd3fd6412545482cc048fcdc82a1b0a81d04f9daf4be4298fac0b8d64736f6c634300080d0033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
