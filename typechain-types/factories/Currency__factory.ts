/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Currency, CurrencyInterface } from "../Currency";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "CurrencyEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001acb38038062001acb833981810160405281019062000037919062000370565b818181600390805190602001906200005192919062000123565b5080600490805190602001906200006a92919062000123565b505050620000a17f1264fbec374f9cde91bbe47d65d23bb6acb205a55705b8a0fc23bd8c1ce197c260001b6200012060201b60201c565b620000d57fad0b6b8d3db9ce3b70cd03c359b302706eb595423a63dbb43ba6dfdb078500ba60001b6200012060201b60201c565b620001097fdfee376ed7f71bec16f339dabab79d23759e1596bb49b9dc1001533ed706d6be60001b6200012060201b60201c565b601260ff1660808160ff1681525050505062000459565b50565b828054620001319062000424565b90600052602060002090601f016020900481019282620001555760008555620001a1565b82601f106200017057805160ff1916838001178555620001a1565b82800160010185558215620001a1579182015b82811115620001a057825182559160200191906001019062000183565b5b509050620001b09190620001b4565b5090565b5b80821115620001cf576000816000905550600101620001b5565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023c82620001f1565b810181811067ffffffffffffffff821117156200025e576200025d62000202565b5b80604052505050565b600062000273620001d3565b905062000281828262000231565b919050565b600067ffffffffffffffff821115620002a457620002a362000202565b5b620002af82620001f1565b9050602081019050919050565b60005b83811015620002dc578082015181840152602081019050620002bf565b83811115620002ec576000848401525b50505050565b600062000309620003038462000286565b62000267565b905082815260208101848484011115620003285762000327620001ec565b5b62000335848285620002bc565b509392505050565b600082601f830112620003555762000354620001e7565b5b815162000367848260208601620002f2565b91505092915050565b600080604083850312156200038a5762000389620001dd565b5b600083015167ffffffffffffffff811115620003ab57620003aa620001e2565b5b620003b9858286016200033d565b925050602083015167ffffffffffffffff811115620003dd57620003dc620001e2565b5b620003eb858286016200033d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200043d57607f821691505b602082108103620004535762000452620003f5565b5b50919050565b60805161165662000475600039600061041301526116566000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063cb7e657914610251578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610e6d565b60405180910390f35b6100f160048036038101906100ec9190610f28565b61032f565b6040516100fe9190610f83565b60405180910390f35b61010f610352565b60405161011c9190610fad565b60405180910390f35b61013f600480360381019061013a9190610fc8565b61035c565b60405161014c9190610f83565b60405180910390f35b61015d61038b565b60405161016a9190611037565b60405180910390f35b61018d60048036038101906101889190610f28565b610437565b60405161019a9190610f83565b60405180910390f35b6101bd60048036038101906101b89190611052565b61046e565b6040516101ca9190610fad565b60405180910390f35b6101db6104b6565b6040516101e89190610e6d565b60405180910390f35b61020b60048036038101906102069190610f28565b610548565b6040516102189190610f83565b60405180910390f35b61023b60048036038101906102369190610f28565b6105bf565b6040516102489190610f83565b60405180910390f35b61026b60048036038101906102669190610f28565b6105e2565b005b6102876004803603810190610282919061107f565b610705565b6040516102949190610fad565b60405180910390f35b6060600380546102ac906110ee565b80601f01602080910402602001604051908101604052809291908181526020018280546102d8906110ee565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a61078c565b9050610347818585610794565b600191505092915050565b6000600254905090565b60008061036761078c565b905061037485828561095d565b61037f8585856109e9565b60019150509392505050565b60006103b97f9a8c400b59a604d69e4da030a30e8eeb0a0ffe2e7b5bece79f128851c6fd9c5960001b610c68565b6103e57fb1355420334b1e767662d4e4a93a27ea55dbe83593f2e9fc0cc7ef385b51a3da60001b610c68565b6104117f55fea76f848d7fce396607852d669b42dced53ecb6fe801db77c3dc044b9a64c60001b610c68565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b60008061044261078c565b90506104638185856104548589610705565b61045e919061114e565b610794565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104c5906110ee565b80601f01602080910402602001604051908101604052809291908181526020018280546104f1906110ee565b801561053e5780601f106105135761010080835404028352916020019161053e565b820191906000526020600020905b81548152906001019060200180831161052157829003601f168201915b5050505050905090565b60008061055361078c565b905060006105618286610705565b9050838110156105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d90611216565b60405180910390fd5b6105b38286868403610794565b60019250505092915050565b6000806105ca61078c565b90506105d78185856109e9565b600191505092915050565b61060e7f25bad9d6bbd424624bc387f0dd655c31b0a8b45cd901d78ad31183ec85cb817460001b610c68565b61063a7f7ad5d954fa6b4b62886057c7283ad74813b304d0d313705086709dae9a88bf0d60001b610c68565b6106667fbae7f1c14f8cef6eef5d2425d62f37955ea0e3505891ec6ec10b01df3d1043d960001b610c68565b7fa7e7944a3d5b506243dd0cf3344ca65bcaa77f402964b996b087a860097916c38282604051610697929190611245565b60405180910390a16106cb7f9cf39b6b4c46e087f6913568e6c635730a2fac0b18219a77611fdb18734e97e360001b610c68565b6106f77fa1173050c108baf4218d16e42522612e9a1cf8959f05a41234fe6c89bfc8abbb60001b610c68565b6107018282610c6b565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fa906112e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086990611372565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109509190610fad565b60405180910390a3505050565b60006109698484610705565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109e357818110156109d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cc906113de565b60405180910390fd5b6109e28484848403610794565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4f90611470565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abe90611502565b60405180910390fd5b610ad2838383610dca565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4f90611594565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610beb919061114e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c4f9190610fad565b60405180910390a3610c62848484610dcf565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd190611600565b60405180910390fd5b610ce660008383610dca565b8060026000828254610cf8919061114e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d4d919061114e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610db29190610fad565b60405180910390a3610dc660008383610dcf565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e0e578082015181840152602081019050610df3565b83811115610e1d576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e3f82610dd4565b610e498185610ddf565b9350610e59818560208601610df0565b610e6281610e23565b840191505092915050565b60006020820190508181036000830152610e878184610e34565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ebf82610e94565b9050919050565b610ecf81610eb4565b8114610eda57600080fd5b50565b600081359050610eec81610ec6565b92915050565b6000819050919050565b610f0581610ef2565b8114610f1057600080fd5b50565b600081359050610f2281610efc565b92915050565b60008060408385031215610f3f57610f3e610e8f565b5b6000610f4d85828601610edd565b9250506020610f5e85828601610f13565b9150509250929050565b60008115159050919050565b610f7d81610f68565b82525050565b6000602082019050610f986000830184610f74565b92915050565b610fa781610ef2565b82525050565b6000602082019050610fc26000830184610f9e565b92915050565b600080600060608486031215610fe157610fe0610e8f565b5b6000610fef86828701610edd565b935050602061100086828701610edd565b925050604061101186828701610f13565b9150509250925092565b600060ff82169050919050565b6110318161101b565b82525050565b600060208201905061104c6000830184611028565b92915050565b60006020828403121561106857611067610e8f565b5b600061107684828501610edd565b91505092915050565b6000806040838503121561109657611095610e8f565b5b60006110a485828601610edd565b92505060206110b585828601610edd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061110657607f821691505b602082108103611119576111186110bf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061115982610ef2565b915061116483610ef2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111995761119861111f565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611200602583610ddf565b915061120b826111a4565b604082019050919050565b6000602082019050818103600083015261122f816111f3565b9050919050565b61123f81610eb4565b82525050565b600060408201905061125a6000830185611236565b6112676020830184610f9e565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006112ca602483610ddf565b91506112d58261126e565b604082019050919050565b600060208201905081810360008301526112f9816112bd565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061135c602283610ddf565b915061136782611300565b604082019050919050565b6000602082019050818103600083015261138b8161134f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006113c8601d83610ddf565b91506113d382611392565b602082019050919050565b600060208201905081810360008301526113f7816113bb565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061145a602583610ddf565b9150611465826113fe565b604082019050919050565b600060208201905081810360008301526114898161144d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006114ec602383610ddf565b91506114f782611490565b604082019050919050565b6000602082019050818103600083015261151b816114df565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061157e602683610ddf565b915061158982611522565b604082019050919050565b600060208201905081810360008301526115ad81611571565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006115ea601f83610ddf565b91506115f5826115b4565b602082019050919050565b60006020820190508181036000830152611619816115dd565b905091905056fea26469706673582212203699285193ce9fc5aae802a9c6fda7f1acc424e260b7038e930159ca114d114964736f6c634300080d0033";

type CurrencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurrencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Currency__factory extends ContractFactory {
  constructor(...args: CurrencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Currency> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Currency>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): Currency {
    return super.attach(address) as Currency;
  }
  connect(signer: Signer): Currency__factory {
    return super.connect(signer) as Currency__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurrencyInterface {
    return new utils.Interface(_abi) as CurrencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Currency {
    return new Contract(address, _abi, signerOrProvider) as Currency;
  }
}
