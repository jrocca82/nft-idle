/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Currency, CurrencyInterface } from "../Currency";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "CurrencyEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAuth",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAuth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001ab138038062001ab1833981810160405281019062000037919062000329565b8181816003908051906020019062000051929190620000dc565b5080600490805190602001906200006a929190620000dc565b5050506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550601260ff1660808160ff1681525050505062000412565b828054620000ea90620003dd565b90600052602060002090601f0160209004810192826200010e57600085556200015a565b82601f106200012957805160ff19168380011785556200015a565b828001600101855582156200015a579182015b82811115620001595782518255916020019190600101906200013c565b5b5090506200016991906200016d565b5090565b5b80821115620001885760008160009055506001016200016e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001f582620001aa565b810181811067ffffffffffffffff82111715620002175762000216620001bb565b5b80604052505050565b60006200022c6200018c565b90506200023a8282620001ea565b919050565b600067ffffffffffffffff8211156200025d576200025c620001bb565b5b6200026882620001aa565b9050602081019050919050565b60005b838110156200029557808201518184015260208101905062000278565b83811115620002a5576000848401525b50505050565b6000620002c2620002bc846200023f565b62000220565b905082815260208101848484011115620002e157620002e0620001a5565b5b620002ee84828562000275565b509392505050565b600082601f8301126200030e576200030d620001a0565b5b815162000320848260208601620002ab565b91505092915050565b6000806040838503121562000343576200034262000196565b5b600083015167ffffffffffffffff8111156200036457620003636200019b565b5b6200037285828601620002f6565b925050602083015167ffffffffffffffff8111156200039657620003956200019b565b5b620003a485828601620002f6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f657607f821691505b6020821081036200040c576200040b620003ae565b5b50919050565b6080516116836200042e60003960006104c901526116836000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636e4e3e2d1161008c578063a457c2d711610066578063a457c2d714610273578063a9059cbb146102a3578063cb7e6579146102d3578063dd62ed3e146102ef576100ea565b80636e4e3e2d146101f557806370a082311461022557806395d89b4114610255576100ea565b806323b872dd116100c857806323b872dd1461015b5780632b2e05c11461018b578063313ce567146101a757806339509351146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761031f565b6040516101049190610e9a565b60405180910390f35b61012760048036038101906101229190610f55565b6103b1565b6040516101349190610fb0565b60405180910390f35b6101456103d4565b6040516101529190610fda565b60405180910390f35b61017560048036038101906101709190610ff5565b6103de565b6040516101829190610fb0565b60405180910390f35b6101a560048036038101906101a09190611048565b61040d565b005b6101af6104c5565b6040516101bc9190611091565b60405180910390f35b6101df60048036038101906101da9190610f55565b6104ed565b6040516101ec9190610fb0565b60405180910390f35b61020f600480360381019061020a9190611048565b610524565b60405161021c9190610fb0565b60405180910390f35b61023f600480360381019061023a9190611048565b61057a565b60405161024c9190610fda565b60405180910390f35b61025d6105c2565b60405161026a9190610e9a565b60405180910390f35b61028d60048036038101906102889190610f55565b610654565b60405161029a9190610fb0565b60405180910390f35b6102bd60048036038101906102b89190610f55565b6106cb565b6040516102ca9190610fb0565b60405180910390f35b6102ed60048036038101906102e89190610f55565b6106ee565b005b610309600480360381019061030491906110ac565b610735565b6040516103169190610fda565b60405180910390f35b60606003805461032e9061111b565b80601f016020809104026020016040519081016040528092919081815260200182805461035a9061111b565b80156103a75780601f1061037c576101008083540402835291602001916103a7565b820191906000526020600020905b81548152906001019060200180831161038a57829003601f168201915b5050505050905090565b6000806103bc6107bc565b90506103c98185856107c4565b600191505092915050565b6000600254905090565b6000806103e96107bc565b90506103f685828561098d565b610401858585610a19565b60019150509392505050565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461046a57600080fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806104f86107bc565b905061051981858561050a8589610735565b610514919061117b565b6107c4565b600191505092915050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105d19061111b565b80601f01602080910402602001604051908101604052809291908181526020018280546105fd9061111b565b801561064a5780601f1061061f5761010080835404028352916020019161064a565b820191906000526020600020905b81548152906001019060200180831161062d57829003601f168201915b5050505050905090565b60008061065f6107bc565b9050600061066d8286610735565b9050838110156106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a990611243565b60405180910390fd5b6106bf82868684036107c4565b60019250505092915050565b6000806106d66107bc565b90506106e3818585610a19565b600191505092915050565b7fa7e7944a3d5b506243dd0cf3344ca65bcaa77f402964b996b087a860097916c3828260405161071f929190611272565b60405180910390a16107318282610c98565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a9061130d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108999061139f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109809190610fda565b60405180910390a3505050565b60006109998484610735565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a135781811015610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc9061140b565b60405180910390fd5b610a1284848484036107c4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7f9061149d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee9061152f565b60405180910390fd5b610b02838383610df7565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7f906115c1565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1b919061117b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c7f9190610fda565b60405180910390a3610c92848484610dfc565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe9061162d565b60405180910390fd5b610d1360008383610df7565b8060026000828254610d25919061117b565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d7a919061117b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ddf9190610fda565b60405180910390a3610df360008383610dfc565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e3b578082015181840152602081019050610e20565b83811115610e4a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e6c82610e01565b610e768185610e0c565b9350610e86818560208601610e1d565b610e8f81610e50565b840191505092915050565b60006020820190508181036000830152610eb48184610e61565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eec82610ec1565b9050919050565b610efc81610ee1565b8114610f0757600080fd5b50565b600081359050610f1981610ef3565b92915050565b6000819050919050565b610f3281610f1f565b8114610f3d57600080fd5b50565b600081359050610f4f81610f29565b92915050565b60008060408385031215610f6c57610f6b610ebc565b5b6000610f7a85828601610f0a565b9250506020610f8b85828601610f40565b9150509250929050565b60008115159050919050565b610faa81610f95565b82525050565b6000602082019050610fc56000830184610fa1565b92915050565b610fd481610f1f565b82525050565b6000602082019050610fef6000830184610fcb565b92915050565b60008060006060848603121561100e5761100d610ebc565b5b600061101c86828701610f0a565b935050602061102d86828701610f0a565b925050604061103e86828701610f40565b9150509250925092565b60006020828403121561105e5761105d610ebc565b5b600061106c84828501610f0a565b91505092915050565b600060ff82169050919050565b61108b81611075565b82525050565b60006020820190506110a66000830184611082565b92915050565b600080604083850312156110c3576110c2610ebc565b5b60006110d185828601610f0a565b92505060206110e285828601610f0a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061113357607f821691505b602082108103611146576111456110ec565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061118682610f1f565b915061119183610f1f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111c6576111c561114c565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061122d602583610e0c565b9150611238826111d1565b604082019050919050565b6000602082019050818103600083015261125c81611220565b9050919050565b61126c81610ee1565b82525050565b60006040820190506112876000830185611263565b6112946020830184610fcb565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006112f7602483610e0c565b91506113028261129b565b604082019050919050565b60006020820190508181036000830152611326816112ea565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611389602283610e0c565b91506113948261132d565b604082019050919050565b600060208201905081810360008301526113b88161137c565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006113f5601d83610e0c565b9150611400826113bf565b602082019050919050565b60006020820190508181036000830152611424816113e8565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611487602583610e0c565b91506114928261142b565b604082019050919050565b600060208201905081810360008301526114b68161147a565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611519602383610e0c565b9150611524826114bd565b604082019050919050565b600060208201905081810360008301526115488161150c565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006115ab602683610e0c565b91506115b68261154f565b604082019050919050565b600060208201905081810360008301526115da8161159e565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611617601f83610e0c565b9150611622826115e1565b602082019050919050565b600060208201905081810360008301526116468161160a565b905091905056fea26469706673582212204a54f0be719ed903b7573d304b5c006c24b418ae2f880ce8cee38210fddffbc864736f6c634300080d0033";

type CurrencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurrencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Currency__factory extends ContractFactory {
  constructor(...args: CurrencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Currency> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Currency>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): Currency {
    return super.attach(address) as Currency;
  }
  connect(signer: Signer): Currency__factory {
    return super.connect(signer) as Currency__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurrencyInterface {
    return new utils.Interface(_abi) as CurrencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Currency {
    return new Contract(address, _abi, signerOrProvider) as Currency;
  }
}
