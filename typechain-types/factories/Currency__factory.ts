/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Currency, CurrencyInterface } from "../Currency";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001858380380620018588339818101604052810190620000379190620002d1565b818181600390805190602001906200005192919062000084565b5080600490805190602001906200006a92919062000084565b505050601260ff1660808160ff16815250505050620003ba565b828054620000929062000385565b90600052602060002090601f016020900481019282620000b6576000855562000102565b82601f10620000d157805160ff191683800117855562000102565b8280016001018555821562000102579182015b8281111562000101578251825591602001919060010190620000e4565b5b50905062000111919062000115565b5090565b5b808211156200013057600081600090555060010162000116565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200019d8262000152565b810181811067ffffffffffffffff82111715620001bf57620001be62000163565b5b80604052505050565b6000620001d462000134565b9050620001e2828262000192565b919050565b600067ffffffffffffffff82111562000205576200020462000163565b5b620002108262000152565b9050602081019050919050565b60005b838110156200023d57808201518184015260208101905062000220565b838111156200024d576000848401525b50505050565b60006200026a6200026484620001e7565b620001c8565b9050828152602081018484840111156200028957620002886200014d565b5b620002968482856200021d565b509392505050565b600082601f830112620002b657620002b562000148565b5b8151620002c884826020860162000253565b91505092915050565b60008060408385031215620002eb57620002ea6200013e565b5b600083015167ffffffffffffffff8111156200030c576200030b62000143565b5b6200031a858286016200029e565b925050602083015167ffffffffffffffff8111156200033e576200033d62000143565b5b6200034c858286016200029e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200039e57607f821691505b602082108103620003b457620003b362000356565b5b50919050565b608051611482620003d6600039600061038f01526114826000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063cb7e657914610251578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610cd1565b60405180910390f35b6100f160048036038101906100ec9190610d8c565b61032f565b6040516100fe9190610de7565b60405180910390f35b61010f610352565b60405161011c9190610e11565b60405180910390f35b61013f600480360381019061013a9190610e2c565b61035c565b60405161014c9190610de7565b60405180910390f35b61015d61038b565b60405161016a9190610e9b565b60405180910390f35b61018d60048036038101906101889190610d8c565b6103b3565b60405161019a9190610de7565b60405180910390f35b6101bd60048036038101906101b89190610eb6565b6103ea565b6040516101ca9190610e11565b60405180910390f35b6101db610432565b6040516101e89190610cd1565b60405180910390f35b61020b60048036038101906102069190610d8c565b6104c4565b6040516102189190610de7565b60405180910390f35b61023b60048036038101906102369190610d8c565b61053b565b6040516102489190610de7565b60405180910390f35b61026b60048036038101906102669190610d8c565b61055e565b005b61028760048036038101906102829190610ee3565b61056c565b6040516102949190610e11565b60405180910390f35b6060600380546102ac90610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610f52565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a6105f3565b90506103478185856105fb565b600191505092915050565b6000600254905090565b6000806103676105f3565b90506103748582856107c4565b61037f858585610850565b60019150509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000806103be6105f3565b90506103df8185856103d0858961056c565b6103da9190610fb2565b6105fb565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461044190610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461046d90610f52565b80156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b5050505050905090565b6000806104cf6105f3565b905060006104dd828661056c565b905083811015610522576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105199061107a565b60405180910390fd5b61052f82868684036105fb565b60019250505092915050565b6000806105466105f3565b9050610553818585610850565b600191505092915050565b6105688282610acf565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361066a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106619061110c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d09061119e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107b79190610e11565b60405180910390a3505050565b60006107d0848461056c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461084a578181101561083c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108339061120a565b60405180910390fd5b61084984848484036105fb565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b69061129c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109259061132e565b60405180910390fd5b610939838383610c2e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b6906113c0565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a529190610fb2565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ab69190610e11565b60405180910390a3610ac9848484610c33565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b359061142c565b60405180910390fd5b610b4a60008383610c2e565b8060026000828254610b5c9190610fb2565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb19190610fb2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c169190610e11565b60405180910390a3610c2a60008383610c33565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c72578082015181840152602081019050610c57565b83811115610c81576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ca382610c38565b610cad8185610c43565b9350610cbd818560208601610c54565b610cc681610c87565b840191505092915050565b60006020820190508181036000830152610ceb8184610c98565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2382610cf8565b9050919050565b610d3381610d18565b8114610d3e57600080fd5b50565b600081359050610d5081610d2a565b92915050565b6000819050919050565b610d6981610d56565b8114610d7457600080fd5b50565b600081359050610d8681610d60565b92915050565b60008060408385031215610da357610da2610cf3565b5b6000610db185828601610d41565b9250506020610dc285828601610d77565b9150509250929050565b60008115159050919050565b610de181610dcc565b82525050565b6000602082019050610dfc6000830184610dd8565b92915050565b610e0b81610d56565b82525050565b6000602082019050610e266000830184610e02565b92915050565b600080600060608486031215610e4557610e44610cf3565b5b6000610e5386828701610d41565b9350506020610e6486828701610d41565b9250506040610e7586828701610d77565b9150509250925092565b600060ff82169050919050565b610e9581610e7f565b82525050565b6000602082019050610eb06000830184610e8c565b92915050565b600060208284031215610ecc57610ecb610cf3565b5b6000610eda84828501610d41565b91505092915050565b60008060408385031215610efa57610ef9610cf3565b5b6000610f0885828601610d41565b9250506020610f1985828601610d41565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f6a57607f821691505b602082108103610f7d57610f7c610f23565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fbd82610d56565b9150610fc883610d56565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ffd57610ffc610f83565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611064602583610c43565b915061106f82611008565b604082019050919050565b6000602082019050818103600083015261109381611057565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006110f6602483610c43565b91506111018261109a565b604082019050919050565b60006020820190508181036000830152611125816110e9565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611188602283610c43565b91506111938261112c565b604082019050919050565b600060208201905081810360008301526111b78161117b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006111f4601d83610c43565b91506111ff826111be565b602082019050919050565b60006020820190508181036000830152611223816111e7565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611286602583610c43565b91506112918261122a565b604082019050919050565b600060208201905081810360008301526112b581611279565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611318602383610c43565b9150611323826112bc565b604082019050919050565b600060208201905081810360008301526113478161130b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006113aa602683610c43565b91506113b58261134e565b604082019050919050565b600060208201905081810360008301526113d98161139d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611416601f83610c43565b9150611421826113e0565b602082019050919050565b6000602082019050818103600083015261144581611409565b905091905056fea264697066735822122061ece3ec7d1e18f7e20ebf17d3a90970cdb54e8b0d8d6ff9dda63f83faed05e864736f6c634300080d0033";

type CurrencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurrencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Currency__factory extends ContractFactory {
  constructor(...args: CurrencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Currency> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Currency>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): Currency {
    return super.attach(address) as Currency;
  }
  connect(signer: Signer): Currency__factory {
    return super.connect(signer) as Currency__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurrencyInterface {
    return new utils.Interface(_abi) as CurrencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Currency {
    return new Contract(address, _abi, signerOrProvider) as Currency;
  }
}
